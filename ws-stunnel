#!/usr/bin/python
import socket, threading, select, signal, sys, time, getopt
import cfscrape

# Listen
LISTENING_ADDR = '0.0.0.0'
if len(sys.argv) > 1:
    LISTENING_PORT = int(sys.argv[1])
else:
    LISTENING_PORT = 700

# Pass
PASS = ''

# CONST
BUFLEN = 4096 * 4
TIMEOUT = 60
DEFAULT_HOST = '127.0.0.1:3303'
RESPONSE = 'HTTP/1.1 101 <b><i><font color="blue">Assalamualaikum Kawann</font></b>\r\nUpgrade: websocket\r\n\r\n'

class Server(threading.Thread):
    def __init__(self, host, port):
        threading.Thread.__init__(self)
        self.running = False
        self.host = host
        self.port = port
        self.threads = []
        self.threadsLock = threading.Lock()
        self.logLock = threading.Lock()

    # ...

class ConnectionHandler(threading.Thread):
    def __init__(self, socClient, server, addr):
        threading.Thread.__init__(self)
        self.clientClosed = False
        self.targetClosed = True
        self.client = socClient
        self.client_buffer = b''
        self.server = server
        self.log = 'Connection: ' + str(addr)

    # ...

    def process_through_cloudflare(self, hostPort):
        cf_url = 'http://{}'.format(hostPort)
        cfscraper = cfscrape.create_scraper()

        try:
            response = cfscraper.get(cf_url)
            self.client.send(response.text.encode('utf-8'))
        except Exception as e:
            self.log += ' - Cloudflare error: ' + str(e)
            self.server.printLog(self.log)
            self.client.send(b'HTTP/1.1 500 Internal Server Error\r\n\r\n')

    # ...

def parse_args(argv):
    global LISTENING_ADDR
    global LISTENING_PORT
    
    try:
        opts, args = getopt.getopt(argv,"hb:p:",["bind=","port="])
    except getopt.GetoptError:
        print_usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            print_usage()
            sys.exit()
        elif opt in ("-b", "--bind"):
            LISTENING_ADDR = arg
        elif opt in ("-p", "--port"):
            LISTENING_PORT = int(arg)

def main(host=LISTENING_ADDR, port=LISTENING_PORT):
    print("\n:-------PythonProxy-------:\n")
    print("Listening addr: " + LISTENING_ADDR)
    print("Listening port: " + str(LISTENING_PORT) + "\n")
    print(":-------------------------:\n")
    server = Server(LISTENING_ADDR, LISTENING_PORT)
    server.start()
    while True:
        try:
            time.sleep(2)
        except KeyboardInterrupt:
            print('Stopping...')
            server.close()
            break

if __name__ == '__main__':
    parse_args(sys.argv[1:])
    main()